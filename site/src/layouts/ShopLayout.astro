---
/** @fileoverview Layout for Gift Shop pages. */

import { Icon } from "astro-icon/components";
import FixableRegion from "@/components/FixableRegion.astro";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import Navigation from "@/components/Navigation.astro";
import Toast from "@/components/Toast.astro";
import { museumBaseUrl } from "@/lib/constants";
import { getMode } from "@/lib/mode";
import { checkIsNavLink, defaultNavLinks } from "@/lib/nav-links";
import BaseLayout from "./BaseLayout.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;

const mode = getMode();
const headerNavLinks =
  mode === "broken"
    ? [
        ...defaultNavLinks
          .filter((entry) => entry.name === "Gift Shop")
          .filter(checkIsNavLink)
          // Remove mobile breakpoint classes
          .map(({ href, name }) => ({
            href,
            name,
          })),
        ...defaultNavLinks.filter(({ name }) => name !== "Gift Shop"),
      ]
    : defaultNavLinks;

/** @breaklocation Gift Shop */
---

<BaseLayout title={title}>
  <Header />
  {
    /**
     * @break
     * wcag2:
     *   - 1.4.3
     *   - 1.4.6
     * wcag3: Minimum text contrast
     * description: |
     *   The navigation bar content overflows its background on mobile viewports,
     *   making the cart link nearly invisible.
     */
    /**
     * @break
     * wcag2: 1.4.13
     * wcag3: Hover information
     * description: |
     *   In the top navigation bar, nested items open on hover and can only be dismissed by moving the pointer.
     */
    /**
     * @break
     * wcag2: 2.1.1
     * wcag3: Keyboard only
     * description: |
     *   In the top navigation bar, parent items are not focusable (and therefore cannot be opened) via keyboard.
     */
    /**
     * @break
     * wcag2: 3.2.3
     * wcag3: Consistent navigation
     * description: |
     *   The Gift Shop link appears in the header on mobile viewports within gift shop pages,
     *   but does not appear there outside of the gift shop.
     *   It also does not appear in the footer on mobile.
     */
    /**
     * @break
     * wcag2: 4.1.2
     * wcag3: Name, role, value, state
     * description: |
     *   In the top navigation bar, there is no programmatic indication of expandable items.
     */
  }
  <Navigation failureMode="hover" navLinks={headerNavLinks}>
    {
      /**
       * @break
       * wcag2:
       *   - 2.4.6
       *   - 2.4.9
       * wcag3:
       *   - Control labels
       *   - Name, role, value, state
       * description: |
       *   The cart link contains only an icon, with no text label explaining its purpose.
       * discussionItems:
       *   - Does this fail Name, role, value, state under WCAG 3?
       */
    }
    <a href={`${museumBaseUrl}gift-shop/checkout/`}>
      <span id="cart-empty"><Icon name="ri:shopping-cart-line" /></span>
      <span id="cart-filled" hidden><Icon name="ri:shopping-cart-fill" /></span>
      <FixableRegion
        ><span slot="fixed" class="visually-hidden">Cart</span></FixableRegion
      >
      <span id="cart-stats"></span>
    </a>
  </Navigation>
  <main id="main" class="inset">
    <slot />
    {
      /**
       * @break
       * wcag2: 3.2.6
       * wcag3: Consistent help
       * description: |
       *   The help contact number is located above the site footer,
       *   as opposed to all other pages where it is inside the footer at the end.
       */
      mode === "broken" && (
        <p class="assistance">
          <em>For assistance, call (939) 555-0113.</em>
        </p>
      )
    }
  </main>
  {
    /**
     * @break
     * wcag3: Unambiguous text
     * description: |
     *   In the footer, the year of the site's creation is expressed in Roman numerals.
     */
  }
  <Footer withPhoneNumber={mode === "fixed"} />
  <Toast />
</BaseLayout>

<script>
  import { computeTotals } from "@/lib/client/cart";
  import { onStoreChange } from "@/lib/client/store";

  onStoreChange("cart", (cart) => {
    const { totalCost, totalItems } = computeTotals(cart);
    document.getElementById("cart-empty")!.hidden = !!totalItems;
    document.getElementById("cart-filled")!.hidden = !totalItems;
    document.getElementById("cart-stats")!.textContent = totalItems
      ? `${totalItems} ($${totalCost.toFixed(2)})`
      : "";
  });
</script>

<style is:global>
  button:not([class]),
  a.button {
    background-color: var(--gray-700);

    &:not([disabled]):hover {
      background-color: var(--gray-800);
    }

    &:not([disabled]):active {
      background-color: var(--gray-900);
    }
  }

  .assistance {
    margin-top: calc(1rem * var(--ms5));
  }
</style>
