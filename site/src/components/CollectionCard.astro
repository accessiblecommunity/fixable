---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

type Props = {
  class?: string;
  style?: string;
  height?: `${number}` | number;
  width?: `${number}` | number;
} & (
  | {
      description: string;
      image: CollectionEntry<"collection">["data"]["image"];
      title: string;
    }
  | { item: CollectionEntry<"collection"> }
);

const { class: extraClasses, height, style, width } = Astro.props;

const Content =
  "item" in Astro.props ? (await Astro.props.item.render()).Content : null;
const { description, image, title } =
  "item" in Astro.props ? Astro.props.item.data : Astro.props;
---

<div class:list={["card", extraClasses]} {style}>
  {
    image.vertical ? (
      <div class="row g-0">
        <div class="col-md-6 d-flex align-items-center">
          <Image
            src={image.src}
            alt={image.alt || description}
            class="img-fluid"
            height={height}
            width={width}
          />
        </div>
        <div class="col-md-6">
          <div class="card-body">
            <h3 class="card-title text-center" set:text={title} />
            <div class="card-text">{Content ? <Content /> : description}</div>
          </div>
        </div>
      </div>
    ) : (
      <>
        <Image
          src={image.src}
          alt={image.alt || description}
          class="card-img-top"
          height={height}
          width={width}
        />
        <div class="card-body">
          <h3 class="card-title text-center" set:text={title} />
          <div class="card-text">{Content ? <Content /> : description}</div>
        </div>
      </>
    )
  }
  {
    Astro.slots.has("footer") && (
      <div class="card-footer">
        <slot name="footer" />
      </div>
    )
  }
</div>
