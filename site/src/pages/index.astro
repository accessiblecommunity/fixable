---
import { type CollectionEntry, getCollection } from "astro:content";
import { BreaksList } from "@/components/BreaksList";
import MetaFailureSection from "@/components/meta/MetaFailureSection.astro";
import MetaLayout from "@/layouts/MetaLayout.astro";

const breaks = await getCollection("breaks");
const breakSectionsMap = (await getCollection("breakSections")).reduce(
  (map, section) => {
    map[section.id] = section;
    return map;
  },
  {} as Record<string, CollectionEntry<"breakSections">>
);
---

<MetaLayout title="General Information">
  <h1>General Information</h1>
  <section id="about-this-site">
    <h2>About The Museum of Broken Things</h2>
    <p>
      This site is designed to demonstrate a wide range of accessibility
      failures, for teaching and assessment purposes.
    </p>
    <h3>Site Behavior</h3>
    <p><strong>This site is an example only. Do not enter real information!</strong></p>
    <ul>
      <li>The contents are made up</li>
      <li>The site is static; no data is retained by a server</li>
      <li>No real shipping address or payment processing occurs</li>
      <li>
          Registration and sign-in is not processed by a server,
          but it <em>does</em> function locally
          <ul><li>
            i.e., whatever email and password you most recently specified during registration
            will then work on the Sign In page
          </li></ul>
      </li>
      <li>
        No cookies are stored, despite what the home page might suggest
      </li>
      <li>
        Local storage is used for simulated persistence
        (e.g., for sign-in and the gift shop cart)
      </li>
    </ul>
    <p>
      <a href="museum/">Visit the Museum of Broken Things</a>
    </p>
    <p>
      <button id="clear-localStorage">Clear local storage</button>
      (Note: If the site is open in any other tabs, they will need to be reloaded)
    </p>
  </section>

  { /* Hide summary for built version at the moment; show in dev for confirming content */ }
  <section id="summary-of-failures" hidden={import.meta.env.PROD || undefined}>
    <h2>Summary of failures</h2>
    <p>
      This section provides a breakdown of WCAG failures across the site.
    </p>

    {
      import.meta.env.DEV && (
        <p id="dev-error" class="error" hidden>
          The section specified in the hash does not exist. Check for typos in
          href, or make sure to add it to this page.
        </p>
      )
    }

    <BreaksList client:load breaks={breaks} breakSectionsMap={breakSectionsMap} />
  </section>

  <section id="acknowledgment">
    <h2>Acknowledgment</h2>
    <p>
      The Museum of Broken Things was created by the <a href="https://www.w3.org/WAI/about/groups/agwg/">W3C Accessibility Guidelines Working Group</a> and <a href="https://accessiblecommunity.org/">Accessible Community</a>.
    </p>

    <h2>Individual Contributors</h2>
    <ul>
      <li>Ken Franqueiro</li>
      <li>Francis Storr</li>
      <li>Rachael Bradley Montgomery</li>
      <li>Alastair Campbell</li>
      <li>Asher Kolieboi</li>
      <li>Ellen Liebert</li>
      <li>Brian Montgomery</li> 
      <li>Matt Russell</li>
      <li>Kevin White</li>
    </ul>
  </section>

  <section>
    <h2>License</h2>
    <p>
      This repository is licensed under the
      <a href="https://www.apache.org/licenses/LICENSE-2.0">Apache License, version 2.0</a>.
    </p>
  </section>
</MetaLayout>

<script>
  import { clear } from "@/lib/client/store";

  document.getElementById("clear-localStorage")!.addEventListener("click", () => {
    clear();
  });

  if (
    import.meta.env.DEV &&
    location.hash &&
    !document.getElementById(location.hash.slice(1))
  ) {
    document.getElementById("dev-error")!.hidden = false;
  }
</script>

<style is:global>
  form {
    & div {
      display: flex;
      gap: 1rem;
      margin: 0.5rem;
    }
    & label {
      width: 8em;
    }
  }

  dt {
    font-weight: bold;
  }

  dd + dt {
    margin-top: calc(1rem * var(--ms-3));
  }

  .photosensitivity {
    color: #eb0000;
    font-weight: bold;
    padding: 0.25em;
  }
</style>
