---
import { type CollectionEntry, getCollection } from "astro:content";
import { sortBy } from "lodash-es";
import CoverImage from "@/components/CoverImage.astro";
import Layout from "@/layouts/Layout.astro";

interface Props {
  category: CollectionEntry<"exhibit-categories">;
  exhibits: CollectionEntry<"exhibits">[];
}

export async function getStaticPaths() {
  const allExhibits = await getCollection("exhibits");
  const categories = await getCollection("exhibit-categories");

  return categories.map((category) => ({
    params: { category: category.slug },
    props: {
      category,
      exhibits: sortBy(
        allExhibits.filter(({ id }) => id.startsWith(`${category.slug}/`)),
        ({ data }) => data.title
      ),
    } as Props,
  }));
}

const { category, exhibits } = Astro.props;
const { Content } = await category.render();
---

<Layout title={category.data.title}>
  <h2>{category.data.title}</h2>
  <Content />
  {
    category.data.dangerous && (
      <div class="dangerous-warning">
        <p>
          <strong>Warning!</strong>
        </p>
        <p>
          This category includes content that may be dangerous or unpleasant to
          visitors who are sensitive to flashes or motion. Please do not
          continue down this page or follow links below this point if you are
          sensitive to flashes or motion.
        </p>
      </div>
    )
  }
  <ul
    class:list={[
      "grid-wrapper",
      ...(category.data.dangerous ? ["dangerous-list"] : []),
    ]}
  >
    {
      exhibits.map(({ data, slug }) => (
        <li>
          <div class="image-container">
            <CoverImage
              src={data.image}
              alt={data.skipAlt ? null : data.imageDescription}
              objectPosition={data.imagePosition}
              height="200"
              widths={[960]}
            />
          </div>
          <div class="content">
            <a href={`../${slug}/`}>{data.title}</a>
          </div>
        </li>
      ))
    }
  </ul>
</Layout>

<style>
  @keyframes lightning {
    0%, 12%, 30%, 50% {
      opacity: 0.5;
    }
    10%, 11%, 22%, 29%, 40%, 49%, 60%, 99% {
      opacity: 1;
    }
  }

  ul {
    list-style: none;
    margin: 0;
    padding: calc(1rem * var(--ms6)) 0 calc(1rem * var(--ms10));
  }

  li {
    background: var(--white);
    border: 1px solid var(--hairline);
    grid-column-end: span 2;
  }

  .dangerous-list img {
    animation: linear 2s infinite lightning;
  }

  .image-container {
    height: calc(1rem * var(--ms20));
    overflow: hidden;

    & img {
      width: 100%;
    }
  }

  .content a {
    display: block;
    padding: 1rem;
    text-align: center;
  }

  .dangerous-warning {
    background-color: var(--gold-vivid-050);
    font-size: calc(1rem * var(--ms2));
    margin: calc(1rem * var(--ms10)) 0;
    padding: calc(1rem * var(--ms20));
  }
</style>
