---
import Fixable from "@/components/Fixable.astro";
import FormLayout from "@/components/FormLayout.astro";
import Layout from "@/layouts/Layout.astro";

/** @breaklocation Volunteer */
---

<Layout title="Volunteer">
  <FormLayout action="thank-you/">
    <label
      >First name
      <input name="firstname" />
    </label>
    <label
      >Middle name
      <input name="middlename" />
    </label>
    <label
      >Last name
      <input name="lastname" />
    </label>
    <label
      >Email address
      <Fixable
        as="input"
        broken={{ type: "text" }}
        fixed={{ type: "email", "aria-describedby": "email-suggestion" }}
        name="email"
        id="email"
      />
    </label>
    {
      /**
       * @break
       * wcag2:
       *   - 1.4.3
       *   - 1.4.6
       * wcag3: Minimum text contrast
       * description: |
       *   The "did you mean" email prompt has insufficient contrast.
       */
      /**
       * @break
       * wcag2: 4.1.3
       * wcag3: Notify on change
       * description: |
       *   The "did you mean" email prompt doesn't grab focus and isn't announced.
       */
      /**
       * @break
       * wcag3: Error identification
       * description: |
       *   The "did you mean" email prompt isn't programmatically associated with the error source.
       */
    }
    <Fixable
      as="div"
      broken={{ class: "email-did-you-mean__broken" }}
      fixed={{ class: "email-did-you-mean__fixed", role: "alert" }}
      id="email-suggestion"
    />
    <label
      >Phone number
      <Fixable as="input" fixed={{ type: "tel" }} name="phone" />
    </label>
    <button type="submit">Submit</button>
  </FormLayout>
</Layout>
<style>
  #email-suggestion {
    display: none;
    margin-block-start: -1rem;
  }

  .email-did-you-mean__broken {
    color: var(--red-warm-400);
  }

  .email-did-you-mean__fixed {
    color: var(--red-warm-500);
  }
</style>

<script>
  import { disableInputs } from "@/lib/client/form";
  import { showToast } from "@/lib/client/toast";

  /**
   * @break
   * wcag2: 2.2.3
   * wcag3: Disable timeout
   * description: |
   *   The toast that appears when the timeout lapses disappears after a few seconds,
   *   and this cannot be prevented.
   */
  /**
   * @break
   * wcag2: 2.2.6
   * wcag3: Disable timeout
   * description: |
   *   The form becomes unsubmittable after a short time period,
   *   which is not disclosed in advance and cannot be adjusted or disabled.
   * discussionItems:
   *   - For WCAG 3, should all 3 Adequate time requirements be considered as failed?
   */
  setTimeout(() => {
    /**
     * @break
     * wcag2: 4.1.3
     * wcag3: Notify on change
     * description: |
     *   When the form times out, the toast that appears
     *   does not grab focus and is not announced.
     */
    /**
     * @break
     * wcag3: Persistent errors
     * description: |
     *   The timeout notification toast dismisses itself automatically
     *   without waiting for the user.
     */
    showToast("The form has expired; please refresh the page to start over.", {
      duration: 3000,
      type: "error",
      withDismiss: false,
    });
    disableInputs(document.querySelector("main form") as HTMLFormElement);
  }, 60000);

  document.getElementById("email")!.addEventListener("blur", function () {
    const email = (this as HTMLInputElement).value || "";
    const suggestion = document.getElementById("email-suggestion")!;
    if (
      email &&
      email.includes("@") &&
      !email.endsWith("@gmail.com") &&
      !email.endsWith("@hotmail.com")
    ) {
      suggestion.style.display = "block";
      suggestion.textContent = "Did you mean gmail.com or hotmail.com?";
    } else {
      suggestion.style.display = "";
      suggestion.textContent = "";
    }
  });
</script>
