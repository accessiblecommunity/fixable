---
import ConditionalParent from "@/components/ConditionalParent.astro";
import FixableRegion from "@/components/FixableRegion.astro";
import FormLayout from "@/components/FormLayout.astro";
import Layout from "@/layouts/Layout.astro";
import { getMode } from "@/lib/mode";

const isBroken = getMode() === "broken";
---

<Layout title="Volunteer">
  <h1>Thank You to our Volunteers</h1>
  <p>
    The Museum would not be where it is today without the generous help of a
    wide variety of volunteers. We are grateful to everyone who has contributed
    in any way, and we're incredibly proud of all we've accomplished together.
  </p>
  <p id="sign-in-cta" hidden>
    Interested in volunteering? Please <a href="../login/">sign in</a> to apply.
  </p>
  <FormLayout id="volunteer-form" action="thank-you/" hidden>
    <p>
      If you are interested in volunteering, please fill out the form below.
    </p>
    <h2>Volunteer Application Form</h2>
    <ConditionalParent as="div" class="fieldset" role="group" if={isBroken}>
      <ConditionalParent as="fieldset" if={!isBroken}>
        <FixableRegion>
          <div id="days-of-week">Days of week available:</div>
          <legend slot="fixed">Days of week available</legend>
        </FixableRegion>
        {
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ].map((day, i) => (
            <>
              <input type="checkbox" name="days" id={`days-${i}`} value={i} />
              <label for={`days-${i}`}>{day}</label>
            </>
          ))
        }
      </ConditionalParent>
    </ConditionalParent>
    <ConditionalParent
      as="div"
      class="fieldset"
      role="group"
      aria-labelledby="days-of-week"
      if={isBroken}
    >
      <ConditionalParent as="fieldset" if={!isBroken}>
        <FixableRegion>
          <div>Times of day available:</div>
          <legend slot="fixed">Times of day available</legend>
        </FixableRegion>
        {
          ["Morning", "Afternoon", "Evening"].map((time) => (
            <>
              <input
                type="checkbox"
                name="times"
                id={`times-${time.toLowerCase()}`}
                value={time.toLowerCase()}
              />
              <label for={`times-${time.toLowerCase()}`}>{time}</label>
            </>
          ))
        }
      </ConditionalParent>
    </ConditionalParent>
    <ConditionalParent as="div" class="fieldset" if={isBroken}>
      <ConditionalParent as="fieldset" if={!isBroken}>
        <FixableRegion>
          <div>Positions of interest:</div>
          <legend slot="fixed">Positions of interest</legend>
        </FixableRegion>
        <input
          type="checkbox"
          name="positions"
          id="positions-docent"
          value="docent"
        />
        <label for="positions-docent">
          Docent (requires 60 hours of training)</label
        >
        <input
          type="checkbox"
          name="positions"
          id="positions-information-desk"
          value="information-desk"
        />
        <label for="positions-information-desk"> Information Desk</label>
        <input
          type="checkbox"
          name="positions"
          id="positions-alt"
          value="alt"
        />
        <label for="positions-alt"
          >Crowdsource alt text for collection images (remote)</label
        >
        <div>
          <input
            type="checkbox"
            name="positions"
            id="positions-other"
            value="other"
          />
          <label for="positions-other">Other (explain expertise)</label>
          <textarea name="positions-other"></textarea>
        </div>
      </ConditionalParent>
    </ConditionalParent>
    <button type="submit">Submit</button>
  </FormLayout>
</Layout>

<script>
  import { disableInputs } from "@/lib/client/form";
  import { recall } from "@/lib/client/store";
  import { showToast } from "@/lib/client/toast";

  if (recall("loggedInAt")) {
    document.getElementById("volunteer-form")!.hidden = false;
    setTimeout(() => {
      showToast(
        "The form has expired; please refresh the page to start over.",
        {
          duration: 3000,
          type: "error",
          withDismiss: false,
        }
      );
      disableInputs(document.querySelector("main form") as HTMLFormElement);
    }, 60000);
  } else {
    document.getElementById("sign-in-cta")!.hidden = false;
  }
</script>

<style>
  label:has(input:not(:checked)) + textarea[name="positions-other"] {
    display: none;
  }

  fieldset label,
  .fieldset label {
    margin-inline-end: 1em;
  }
</style>
